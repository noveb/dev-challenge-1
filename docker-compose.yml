version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        build_type: development
      target: local
      cache_from:
        - node:18-alpine
    restart: unless-stopped
    depends_on:
      - mongo
    env_file: .env
    environment:
      TIMEZONE: UTC
      MONGO_URL: mongodb://mongo:27017/
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - scalara_network
    volumes:
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./nodemon.json:/app/nodemon.json
      - ./src:/app/src
    command: npm run debug:docker

  mongo:
    image: mongo
    restart: unless-stopped
    networks:
      - scalara_network
      # environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: scalara
    logging:
      driver: none

  minio:
    image: minio/minio
    restart: unless-stopped
    ports:
     - 9000:9000
     - 9001:9001
    networks:
      - scalara_network
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: "scalara$"
    command: server --console-address ":9001" /data

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    depends_on:
      - mongo
    ports:
      - 8081:8081
    networks:
      - scalara_network
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
      # ME_CONFIG_MONGODB_ADMINUSERNAME: root
      # ME_CONFIG_MONGODB_ADMINPASSWORD: scalara
    logging:
      driver: none

volumes:
  minio_storage:

networks:
  scalara_network:
    driver: bridge